{"version":3,"sources":["components/SearchBar.js","components/Profile.js","components/ForOhFor.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","props","history","useHistory","location","useLocation","React","useEffect","pathname","console","log","slice","toUpperCase","searchTicker","submitLocationUpdate","onSearch","useState","formValues","setFormValues","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onSubmit","e","preventDefault","push","search","submitTickerUpdate","currentTarget","reset","error","onChange","evt","target","value","name","placeholder","required","Profile","companyName","ticker","businessType","split","join","description","length","rel","bookValue","dividend","eps","analystTargetPrice","parseFloat","currentPrice","toFixed","isNaN","Math","sqrt","FourOhFour","About","App","updateSearchTicker","tickerValue","setState","updateLocationState","state","performSearch","query","undefined","axios","all","get","then","spread","finData","prices","data","Note","JSON","stringify","Symbol","Name","Industry","Description","BookValue","ForwardAnnualDividendRate","DilutedEPSTTM","AnalystTargetPrice","catch","this","charSet","content","integrity","crossOrigin","SearchBar","exact","path","render","websiteUrl","component","ForOhFor","src","Component","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6b25333e.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst SearchForm = (props) => {\n  \n  const history = useHistory();\n  const location = useLocation();\n\n  React.useEffect( () => {\n    // console.log('location = ', location.pathname, \", location: \", location.pathname.slice(8).toUpperCase(), \", searchTicker: \", props.searchTicker);\n    if (location.pathname !== '/' && location.pathname !== '/about') {\n      console.log('location = ', location.pathname, \", location: \", location.pathname.slice(8).toUpperCase(), \", searchTicker: \", props.searchTicker);\n      props.submitLocationUpdate(location.pathname.slice(8).toUpperCase());\n      if (location.pathname.slice(8).toUpperCase() !== props.searchTicker) {\n        props.onSearch(location.pathname.slice(8));\n      }\n    }\n  }, [location.pathname, props]);\n\n  const [formValues, setFormValues] = React.useState({})\n\n  const handleValueChange = (evt) => {\n    //console.log(evt);\n    const {value, name} = evt.target;\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n    //console.log(formValues);\n  }\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    history.push({\n      pathname: `/search/${formValues.search}`\n    })\n    console.log('1st console log ' + formValues.search);\n    props.submitTickerUpdate(formValues.search.toUpperCase());\n    props.onSearch(formValues.search);\n    e.currentTarget.reset();\n    console.log('2nd console log ' + formValues.search);\n  }\n  \n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n            <div className=\"navbar-brand\"><a className=\"nav-link text-dark\" href=\"/\">Graham Number Stock Displayer</a></div>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/about\">About</a>\n            </li>\n            </ul>\n          </div>\n          <form className=\"search-form form-inline ml-auto navbar-text\" onSubmit={handleSubmit} >\n            {(props.error === \"Too many requests, please wait 1 minute\" || \"Stock Data Not Found, Try Again\") ? <div className=\"text-danger\">{props.error}</div> : <div></div> }\n            <input \n                  className=\"form-control mr-sm-2\"\n                  type=\"search\" \n                  onChange={handleValueChange}\n                  name=\"search\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                  required\n                  />\n            <button type=\"submit\" id=\"submit\" className=\"search-button btn btn-outline-info my-2 my-sm-0\">\n              Search\n            </button>\n          </form>\n    </nav>  \n  );\n}\n\nexport default SearchForm;","import React from 'react';\n\nconst Profile = props => (\n    <div className=\"App\">\n        <div className=\"container\">\n            <div className=\"card mt-4\">\n                <h5 className=\"card-header\">{props.companyName}</h5>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{props.ticker}</h5>\n                    <p className=\"card-text\">{props.businessType.split(/(?=[A-Z])/).join(' ')}</p>\n                    <p className=\"card-text font-weight-light\">{props.description.length >= 750 ? props.description.slice(0, 600) + \"...\" : props.description}</p>\n                    <a rel=\"noopener noreferrer\" href={\"https://finviz.com/quote.ashx?t=\" + props.ticker} className=\"btn btn-primary\" target=\"_blank\">More Info</a>\n                </div>\n                <ul className=\"list-group list-group-flush card-body\">\n                    <li className={(props.bookValue > 0) ? \"list-group-item\" : \"list-group-item text-danger\"}>Book Value Per Share: {props.bookValue}</li>\n                    <li className=\"list-group-item\">Annual Dividend Rate: ${props.dividend}</li>\n                    <li className={(props.eps > 0) ? \"list-group-item\" : \"list-group-item text-danger\"}>Earnings Per Share (Diluted, Trailing Tweleve Months): {props.eps}</li>\n                    <li className=\"list-group-item\">Analyst Target Price: ${props.analystTargetPrice}</li>\n                    <li className=\"list-group-item\">Current Price: ${parseFloat(props.currentPrice).toFixed(2)}</li>\n                    <li className=\"list-group-item font-weight-bold\">Graham Number: {isNaN(Math.sqrt(22.5 * props.bookValue * props.eps)) ? \"Not Applicable - See above info\" : \"$\" + parseFloat(Math.sqrt(22.5 * props.bookValue * props.eps)).toFixed(2)}</li>\n                </ul>\n            </div>\n            <footer>\n                <p className=\"text-right text-muted\"><small>2020 JoeyCorp®</small></p>\n            </footer>\n        </div>\n    </div>\n);\n\nexport default Profile;","import React from 'react'\n\n// Overly simple 404 page\n\nconst FourOhFour = () => {\n    return (\n        <div>\n                <p>404</p>\n                <p>¯\\_(ツ)_/¯</p>\n                <p>Ain't No Page like that round here.</p>\n        </div>\n    )\n}\n\nexport default FourOhFour","import React from 'react';\n\nconst About = props => (\n    <div className=\"App\">\n        <div className=\"container\">\n            <div className=\"card mt-4\">\n                <h5 className=\"card-header\">Thanks for using the Graham Stock Displayer App!</h5>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">How to Use:</h5>\n                    <p className=\"card-text\">1. Input a stock ticker into the search bar. Use Google or any other popular search engine or stock market website to find stock tickers if you don't know them. This app wont work unless you use US stock market tickers.</p>\n                    <p className=\"card-text\">2. Read through the stock profile and all the financial data that displays in the app. The Graham number will be displayed at the bottom of the profile. This is a formula created by Benjamin Graham, The Father of Value Investing. The Graham Number is a general test for stock price that can help you determine if a stock is under or over valued.</p>\n                    <p className=\"card-text\">3. If any of the data turns red that is an indicator of poor or unhealthy financial data. Please note: Graham always recommended using at least 3 years of past Earnings Per Share data, but due to the current state of financial data reports this is not possible and this app only uses the last year of Earnings data.</p>\n                    <p className=\"card-text\">4. Compare the current price of the stock displayed in this app and compare it to the Graham Number. If the Graham Number is lower than the current price then that stock may be undervalued!</p>\n                    <p className=\"card-text font-weight-light\">Please Note this app is not intended to be used as investment advice, using of this app does NOT necessarily mean you should invest or not invest in something. This app is also not intended to be used as the sole determining factor in any stock purchasing decisions, please do you own research, and invest at your own risk.</p>\n                    <a rel=\"noopener noreferrer\" href={\"https://www.investopedia.com/terms/g/graham-number.asp\" + props.ticker} className=\"btn btn-primary\" target=\"_blank\">More Info on the Graham Formula</a>\n                </div>\n            </div>\n            <footer>\n                <p className=\"text-right\"><small>2020 JoeyCorp®</small></p>\n            </footer>\n        </div>\n    </div>\n);\n\nexport default About;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport SearchBar from './components/SearchBar';\nimport Profile from './components/Profile';\nimport ForOhFor from './components/ForOhFor';\nimport About from './components/About';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      searchTicker: '',\n      ticker: \"\",\n      companyName: \"\",\n      businessType: \"\",\n      description: \"\",\n      bookValue: \"\",\n      dividend: \"\",\n      eps: \"\",\n      error: \"\",\n      analystTargetPrice: \"\",\n      location: \"AAPL\",\n      currentPrice: \"\",\n    };\n  }\n\n  //function that updates search ticker state in the app\n  updateSearchTicker = (tickerValue) => {\n    console.log(\"updating searchTicker\");\n    this.setState({\n      searchTicker: tickerValue\n    })\n  }\n\n  //function that updates the location state in the app\n  updateLocationState = (location) => {\n    if (this.state.location !== this.state.ticker) {\n      console.log(\"updating location State\");\n      this.setState({\n        location: location\n      })\n    }\n  }\n\n  //function that performs API search and sets state of the app to display\n  //param is just the ticker symbol of the stock but this function works even without one\n  performSearch = (query) => {\n    console.log('performSearch has fired, searchTicker state:', this.state.searchTicker, \"search params:\", query);\n    if (query === undefined) {\n      axios.all([\n        axios.get(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=aapl&apikey=6RZYLKNGHRN5DW3U`), \n        axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=aapl&apikey=7PEUQ2QLEQSDHMFM`)\n      ])\n      .then(axios.spread((finData, prices) => {\n        // Both requests are now complete\n        console.log(finData.data);\n        console.log(prices.data);\n        if (finData.data.Note === \"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.\") {\n            this.setState({\n              error: \"Only 5 searches per minute are allowed, just wait a few seconds before trying again\"\n            })\n          } else if (JSON.stringify(finData.data) === \"{}\") {\n            this.setState({\n              error: \"Stock Data Not Found, Try Again\"\n            })\n          } else {\n            this.setState({\n              ticker: finData.data.Symbol,\n              companyName: finData.data.Name,\n              businessType: finData.data.Industry,\n              description: finData.data.Description,\n              bookValue: finData.data.BookValue,\n              dividend: finData.data.ForwardAnnualDividendRate,\n              eps: finData.data.DilutedEPSTTM,\n              searchTicker: finData.data.Symbol,\n              analystTargetPrice: finData.data.AnalystTargetPrice,\n              currentPrice: prices.data['Global Quote']['05. price'],\n              error: \"\",\n            })\n          }\n      }))\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n    } else {\n      axios.all([\n        axios.get(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${query}&apikey=6RZYLKNGHRN5DW3U`), \n        axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${query}&apikey=7PEUQ2QLEQSDHMFM`)\n      ])\n      .then(axios.spread((finData, prices) => {\n        // Both requests are now complete\n        console.log(finData.data);\n        console.log(prices.data);\n        if (finData.data.Note === \"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.\" \n        || prices.data.Note === \"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day. Please visit https://www.alphavantage.co/premium/ if you would like to target a higher API call frequency.\") {\n            this.setState({\n              error: \"Only 5 searches per minute are allowed, just wait a few seconds before trying again\"\n            })\n          } else if (JSON.stringify(finData.data) === \"{}\") {\n            this.setState({\n              error: \"Stock Data Not Found, Try Again\"\n            })\n          } else {\n            this.setState({\n              ticker: finData.data.Symbol,\n              companyName: finData.data.Name,\n              businessType: finData.data.Industry,\n              description: finData.data.Description,\n              bookValue: finData.data.BookValue,\n              dividend: finData.data.ForwardAnnualDividendRate,\n              eps: finData.data.DilutedEPSTTM,\n              searchTicker: finData.data.Symbol,\n              analystTargetPrice: finData.data.AnalystTargetPrice,\n              currentPrice: prices.data['Global Quote']['05. price'],\n              error: \"\",\n            })\n          }\n      }))\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n    }\n  }\n\n  //This is so the app loads Apple stock info when the app starts\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    this.performSearch('aapl');\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossOrigin=\"anonymous\" />\n        <title>Stock Displayer Pro</title>\n        <header className=\"App-header\">\n        </header>\n        <SearchBar onSearch={this.performSearch} submitTickerUpdate={this.updateSearchTicker} submitLocationUpdate={this.updateLocationState} searchTicker={this.state.searchTicker} location={this.state.location} error={this.state.error}/>\n        <Switch>\n          <Route exact path=\"/search/:id\" render={ () => <Profile \n            companyName={this.state.companyName} \n            ticker={this.state.ticker} \n            businessType={this.state.businessType} \n            websiteUrl={this.state.websiteUrl} \n            bookValue={this.state.bookValue} \n            dividend={this.state.dividend}\n            eps={this.state.eps} \n            description={this.state.description}\n            analystTargetPrice={this.state.analystTargetPrice}\n            currentPrice={this.state.currentPrice}\n            performSearch={this.performSearch} /> } \n            />\n          <Route exact path=\"/\" render={ () => <Profile \n            companyName={this.state.companyName} \n            ticker={this.state.ticker} \n            businessType={this.state.businessType} \n            websiteUrl={this.state.websiteUrl} \n            bookValue={this.state.bookValue} \n            dividend={this.state.dividend}\n            eps={this.state.eps} \n            description={this.state.description}\n            analystTargetPrice={this.state.analystTargetPrice}\n            currentPrice={this.state.currentPrice}\n            performSearch={this.performSearch} />} \n            />\n          <Route exact path=\"/about\" render={ () => <About/>}/>\n          <Route component={ForOhFor} />\n        </Switch> \n        {/* CDN script links */}\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossOrigin=\"anonymous\"></script>\n        <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossOrigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossOrigin=\"anonymous\"></script>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}